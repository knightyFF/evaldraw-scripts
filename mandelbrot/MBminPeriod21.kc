#define _EPS 2^-40 //epsilon.
static maxiter=10;
static bailout=4;
(x,y){
   i=0;//iterations used by mandel0. it doesn't include to work of solve()
   xf=0;yf=0;//fixed point returned by mandel0
   p=mandel0(x,y,i,xf,yf);
   //if(p==0) return 0.5;
   /*wx=0;wy=0;//hyperbolic comp. parametrization
   getw(p,x,y,xf,yf,wx,wy);
   r=sqrt(wx*wx+wy*wy);*/
   p/maxiter
}
mandel0(cx,cy,&i,&xf,&yf){
   x=cx; y=cy;
   r2=x*x+y*y;
   i=0;
   imin=0;minr2=1000;
   if(r2>bailout) return -1;
   if(r2<minr2){ minr2=r2; imin=i+1;}
   mi=1;
   xf=x;yf=y;
   period=solve(imin,cx,cy,_EPS,xf,yf);
   if(period>0) return period;
   do{
      
      mi*=2;
      while(i<mi){      
         i++;
         xx=x*x-y*y+cx;
         y=2*x*y+cy; x=xx;
      
         r2=x*x+y*y;
         if(r2<minr2){ minr2=r2; imin=i+1;}
         if(r2>bailout) return -1;
         
      }
      xf=x;yf=y;
      period=solve(imin,cx,cy,_EPS,xf,yf);
      if(period>0) return period;      
   } while (mi<maxiter);
}
getw(n,cx,cy,x,y,&wx,&wy){
   dx=1; dy=0;
   r2=x*x+y*y;
   for(i=0;i<n && r2<bailout;i++){
      dxx=2*(dx*x-dy*y);
      dy=2*(dx*y+dy*x); dx=dxx;
      
      xx=x*x-y*y+cx;
      y=2*x*y+cy; x=xx;
      
      r2=x*x+y*y;
   }
   wx=dx; wy=dy;
}
mandelperiod(n,cx,cy,eps,x,y){
   x0=x; y0=y;
   for(i=0;i<n;i++){
      xx=x*x-y*y+cx;
      y=2*x*y+cy; x=xx;
      r=(x-x0)^2+(y-y0)^2;
      if(r<eps) break;
   }
   i+1
}
mandel1(n,cx,cy,&x,&y,&dx,&dy){
   dx=1; dy=0;
   r2=x*x+y*y;
   for(i=0;i<n && r2<bailout;i++){
      dxx=2*(dx*x-dy*y);
      dy=2*(dx*y+dy*x); dx=dxx;
      
      xx=x*x-y*y+cx;
      y=2*x*y+cy; x=xx;
      
      r2=x*x+y*y;
   }
}
solve(n,cx,cy,eps,&x,&y){
   dfx=0;dfy=0;
   for(i=0;i<20;i++){
      fx=x; fy=y; 
      mandel1(n,cx,cy,fx,fy,dfx,dfy);
      //if(dfx*dfx+dfy*dfy>=1) return 0;
      //lhs of equation
      gx=fx-x; gy=fy-y;
      //derivative of lhs
      dgx=dfx-1; dgy=dfy;
      //invert derivative
      dg2=1/(dgx*dgx+dgy*dgy);
      dgy*=-dg2;
      dgx*=dg2;
      //delta
      fx=gx*dgx-gy*dgy;
      fy=gx*dgy+gy*dgx;
      //update z
      x-=fx; y-=fy;
      if((fx*fx+fy*fy)<eps*eps || (x*x+y*y)>bailout){
         n=mandelperiod(n,cx,cy,eps,x,y);
         fx=x; fy=y;
         mandel1(n,cx,cy,&fx,&fy,&dfx,&dfy);
   
         if(dfx*dfx+dfy*dfy>=1-eps) return 0;
         if(fx*fx+fy*fy>bailout) return -1;
   
         return n;
      }
   }
   0
}