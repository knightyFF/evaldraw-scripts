enum {NPT=32}
() //3DGrad
{
   static T[NPT][3];
   if(numframes==0){
      get_random_pts_in_sphere(T);
   }
   cls(0);
   clz(1e30);
   mcam(3);
   
   setcol(0x2f8fff);
   drawTN(T);
   drawtriedra(1);
   n=iter(T);
   printnum(n);
   /*for(i=0;i<NPT;i++){
      r=T[i][0]*0.5+0.5;g=T[i][1]*0.5+0.5;b=T[i][2]*0.5+0.5;
      setcol(255*r,255*g,255*b);
      setpix(i,yres-1);
   }*/
}
iter(T[NPT][3]){
   static F[NPT][3];
   a=0.1*NPT;
   dt=0.1;
   for(i=0;i<NPT;i++){
      F[i][0]=0;F[i][1]=0;F[i][2]=0;
   }
   for(i=0;i<NPT;i++){
      for(j=i+1;j<NPT;j++){
         ps=sqrt((T[i][0]-T[j][0])^2+(T[i][1]-T[j][1])^2+(T[i][2]-T[j][2])^2);
         //id=a/(0.01+ps*ps*ps);
         id=exp(-a*ps^2)/(0.01+ps);
         F[i][0]+=id*(T[i][0]-T[j][0]);
         F[i][1]+=id*(T[i][1]-T[j][1]);
         F[i][2]+=id*(T[i][2]-T[j][2]);
         
         F[j][0]+=id*(T[j][0]-T[i][0]);
         F[j][1]+=id*(T[j][1]-T[i][1]);
         F[j][2]+=id*(T[j][2]-T[i][2]);
      }
   }
   nm=0;
   for(i=0;i<NPT;i++){
      n=F[i][0]^2+F[i][1]^2+F[i][2]^2;
      nm=max(nm,n);
   }
   nm=sqrt(nm);
   //return nm;
   for(i=0;i<NPT;i++){
      T[i][0]+=dt*F[i][0];
      T[i][1]+=dt*F[i][1];
      T[i][2]+=dt*F[i][2];
      s=sqrt(T[i][0]^2+T[i][1]^2+T[i][2]^2);is=1/s;
      if(s>1){
         T[i][0]*=is;T[i][1]*=is;T[i][2]*=is;
      }
   }
   nm
}
get_random_pts_in_sphere(T[NPT][3]){
   i=0;
   while(i<NPT){
      x=2*rnd-1;y=2*nrnd-1;z=2*nrnd-1;
      r=sqrt(x*x+y*y+z*z);
      if(r<1){
         T[i][0]=x;T[i][1]=y;T[i][2]=z;
         i++;
      }
   }
}
drawTN(T[NPT][3]){
   for(i=0;i<NPT;i++){
      r=(T[i][0]^2+T[i][1]^2+T[i][2]^2);
      setcol(r*256,r*512,256-r*256);
      drawsph(T[i][0],T[i][1],T[i][2],0.02);
   }
}
drawtriedra(l)
{
   setcol(255,0,0);
   moveto(0,0,0);
   lineto(l,0,0);
   setcol(0,255,0);
   moveto(0,0,0);
   lineto(0,l,0);
   setcol(0,0,255);
   moveto(0,0,0);
   lineto(0,0,l);
}
mcam(d)
{
   p=-(mousy-yres*0.5)*0.01;
   t=-pi/2+(mousx-xres*0.5)*0.01;
   fx=-cos(p)*cos(t);fy=-cos(p)*sin(t);fz=-sin(p);
   dx=cos(p-pi/2)*cos(t);dy=cos(p-pi/2)*sin(t);dz=sin(p-pi/2);
   rx=cos(t+pi/2);ry=sin(t+pi/2);rz=0;
   setcam(-d*fx,-d*fy,-d*fz,rx,ry,rz,dx,dy,dz,fx,fy,fz);
}