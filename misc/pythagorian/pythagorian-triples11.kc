#define DOSVG
(){
   pre();
   cls(0xffffff);
   setcol(200,200,200);
   drawijlines();
   // In order to remove the cases where re and im are not simultaneousely
   //odd or even.
   // We have:
   //  re + im = 2*i+1
   //  re - im = 2*j+1
   // i and j non negative integers
   // This gives:
   // re = i+j+1
   // im = i-j
   for(i=0;i<30;i++)
      for(j=0; j<20; j++){
         re = i+j+1; im=i-j;
         x = re*re-im*im;
         y = 2*re*im;
         r = sqrt(re*re+im*im);//Strange! the circle packing seems perfect. Is it?
         if(x<=0 || y<=0) continue;
         if(gcd(x,y)==1)
            setcol(100,150,0);
         else
            setcol(200,0,0);// color it red when re and im are not co-primes
         //drawcirc(x,y,r);
         drawtri(x,y,r,gcd(x,y)==1);
      } 
   post();
}

static zf = 6, cx=0, cy=0;

pre(){
#ifdef DOSVG
   fprintf("<!DOCTYPE html>\n<html>\n<body>\n\t<svg height=\"%g\" width=\"%g\">\n",yres*zf,xres*zf);
   fprintf("<rect width=\"%g\" height=\"%g\" style=\"fill:rgb(255,255,255);stroke-width:3;stroke:rgb(0,0,0)\" />"
           , xres*zf, yres*zf);
#endif
}
post(){
#ifdef DOSVG
   fprintf("</svg>\n</body>\n</html>\n");
#endif
}

drawcirc(x,y,r){
   x = cx + x * zf;
   y = cy + (yres - y * zf);
   r = r * zf;
   drawsph(x,y,-r);
}

drawtri(x,y,r,prim){
   fsiz=1.*zf*(r^0.7);//font size
   
   //vertices of the triangle
   x0=0; y0=0;
   x1=x; y1=0;
   x2=x; y2=y;
   //get the centroid
   xc=(x0+x1+x2)*1/3; 
   yc=(y0+y1+y2)*1/3;
   //translate the triangle so it's centroid becomes 0,0
   x0 -= xc; x1 -= xc; x2 -= xc;
   y0 -= yc; y1 -= yc; y2 -= yc;
   //scale the triangle by 1/r
   r=2/r;
   x0 *= r; x1 *= r; x2 *= r; 
   y0 *= r; y1 *= r; y2 *= r; 
   //translate back to x,y
   x0 += x; x1 += x; x2 += x;
   y0 += y; y1 += y; y2 += y;
   //draw it
   x0 = cx + x0 * zf; y0 = cy + (yres - y0 * zf);
   x1 = cx + x1 * zf; y1 = cy + (yres - y1 * zf);
   x2 = cx + x2 * zf; y2 = cy + (yres - y2 * zf);
   moveto(x0, y0);
   lineto(x1, y1);
   lineto(x2, y2);
   lineto(x0, y0);
   //output SVG code:
#ifdef DOSVG
   y0 += yres*(zf-1); y1 += yres*(zf-1); y2 += yres*(zf-1);
   if(prim)
      fprintf("<polygon points=\"%g,%g %g,%g %g,%g\" style=\"fill:rgb(100,250,0);fill-opacity:0.5;stroke:rgb(0,150,0);stroke-width:%g\" />\n"
              ,x0,y0,x1,y1,x2,y2,0.1*fsiz);
   else
      fprintf("<polygon points=\"%g,%g %g,%g %g,%g\" style=\"fill:rgb(255,100,0);fill-opacity:0.5;stroke:rgb(255,0,0);stroke-width:%g\" />\n"
              ,x0,y0,x1,y1,x2,y2,0.1*fsiz);
   
   //numbers
      
   //base
   fprintf("<text x=\"%g\" y=\"%g\" font-family=\"Verdana\" font-size=\"%g\" fill=\"black\" text-anchor=\"middle\">%g</text>\n",
           0.5*(x0+x1), y0+fsiz, fsiz,x);
   //height
   fprintf("<text x=\"%g\" y=\"%g\" font-family=\"Verdana\" font-size=\"%g\" fill=\"black\" text-anchor=\"start\">%g</text>\n",
           x1+0.2*fsiz, 0.5*(y1+y2)+0.5*fsiz, fsiz,y);
   //hypotenuse
   fprintf("<text x=\"%g\" y=\"%g\" font-family=\"Verdana\" font-size=\"%g\" fill=\"black\" text-anchor=\"end\">%g</text>\n",
           0.5*(x0+x2), 0.5*(y0+y2), fsiz,sqrt(x*x+y*y));
#endif
}

drawijlines(){
   for(i=1;i<26;i++){
      j=-0.5;
      re = i+j+1; im=i-j;
      x = re*re-im*im;
      y = 2*re*im;
      x = cx + x * zf; y = cy + (yres - y * zf);
      moveto(x, y);
#ifdef DOSVG
      y += yres*(zf-1);
      fprintf("<polyline points=\"%g,%g ",x, y);
#endif
      for(j=-0.4; j<i+0.1; j+=0.1){
         re = i+j+1; im=i-j;
         x = re*re-im*im;
         y = 2*re*im;
         x = cx + x * zf; y = cy + (yres - y * zf);
         lineto(x, y);
#ifdef DOSVG
         y += yres*(zf-1);
         fprintf("%g,%g ", x, y);
#endif
      }
#ifdef DOSVG
         fprintf("\" style=\"fill:none;stroke:rgb(100,100,100);stroke-width:1\" />\n");
#endif
   }
   
   for(j=0;j<26;j++){
      i=j;
      re = i+j+1; im=i-j;
      x = re*re-im*im;
      y = 2*re*im;
      x = cx + x * zf; y = cy + (yres - y * zf);
      moveto(x, y);
#ifdef DOSVG
      y += yres*(zf-1);
      fprintf("<polyline points=\"%g,%g ", x, y);
#endif
      for(i=j+0.1; i<26; i+=0.1){
         re = i+j+1; im=i-j;
         x = re*re-im*im;
         y = 2*re*im;
         x = cx + x * zf; y = cy + (yres - y * zf);
         lineto(x, y);
#ifdef DOSVG
         y += yres*(zf-1);
         fprintf("%g,%g ", x, y);
#endif
      }
#ifdef DOSVG
      fprintf("\" style=\"fill:none;stroke:rgb(100,100,100);stroke-width:1\" />\n");
#endif
   }
}

gcd(x,y){
   do { z=x; x=y%x; y=z; } while (x > 0);
   y
}