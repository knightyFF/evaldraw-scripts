enum {imax=1024,kmax=1024,grdtmpltsiz=256};
static lx,ly;
static grdtmplt[grdtmpltsiz*2+1][grdtmpltsiz*2+1][4];
()
{
   static img0[1024][1024];
   static img1[1024][1024];
   static img2[1024][1024];
   static img3[1024][1024];
   static img4[1024][1024];
   static grad[1024][1024][2];
   static hess[1024][1024][2][2];

   if(numframes==0){
      loadimg(img0);
      CalcGrad(img0,grad);
      NormGrad(grad,img1);
      sclimg(-1,1,img1,img3);
      Hessian(grad,hess);
      DetHess(hess,img2);
      //absimg(img2,img2);
      //sclimg(100,0,img2,img3);
      //MinMaxsclimg(img3,img4);
      mulimg(img3,img2,img1);
      absimg(img1,img2);
      sclimg(1000,0,img2,img1);
      cls(255);
   }
   showimg(img1);
}
CalcGrad(in[imax][imax],out[imax][imax][2])
{
   for(y=0;y<ly;y++)
      for(x=0;x<lx;x++){
         out[y][x][0]=in[y][x+1]-in[y][x-1];
         out[y][x][1]=in[y+1][x]-in[y-1][x];
      }
}
NormGrad(in[imax][imax][2],out[imax][imax])
{
   for(y=0;y<ly;y++)
      for(x=0;x<lx;x++)
         out[y][x]=sqrt(in[y][x][0]*in[y][x][0]+in[y][x][1]*in[y][x][1]);
}
NormGrad2(in[imax][imax][2],out[imax][imax])
{
   for(y=0;y<ly;y++)
      for(x=0;x<lx;x++)
         out[y][x]=(in[y][x][0]*in[y][x][0]+in[y][x][1]*in[y][x][1]);
}
NormalizeGrad(in[imax][imax][2],out[imax][imax][2])
{
   for(y=0;y<ly;y++)
      for(x=0;x<lx;x++){
         m=sqrt(in[y][x][0]*in[y][x][0]+in[y][x][1]*in[y][x][1]);
         if(m>0.01) m=1/m; else m=0;
         out[y][x][0]=m*in[y][x][0];
         out[y][x][1]=m*in[y][x][1];
      }
}
hessian(in[imax][imax][2],out[imax][imax][2][2])
{
   for(y=0;y<ly;y++)
      for(x=0;x<lx;x++){
         out[y][x][0][0]=in[y][x+1][0]-in[y][x-1][0];
         out[y][x][0][1]=in[y+1][x][0]-in[y-1][x][0];
         out[y][x][1][0]=in[y][x+1][1]-in[y][x-1][1];
         out[y][x][1][1]=in[y+1][x][1]-in[y-1][x][1];
      }
}
dethess(in[imax][imax][2][2],out[imax][imax])
{
   for(y=0;y<ly;y++)
      for(x=0;x<lx;x++)
         out[y][x]=in[y][x][0][0]*in[y][x][1][1]-in[y][x][1][0]*in[y][x][0][1];
}
loadimg(im[imax][imax])
{
   static r,g,b;
   getpicsiz(&lx,&ly);
   if(lx>imax)lx=imax;if(ly>imax)ly=imax;
   for(y=0;y<ly;y++)
      for(x=0;x<lx;x++){
         pic(x,y,&r,&g,&b);
         im[y][x]=1/256*(r*0.3+0.55*g+0.15*b);
      }
}
showimg(im[imax][imax])
{
   for(y=0;y<ly;y++)
      for(x=0;x<lx;x++){
         r=im[y][x]*256;
         setcol(r,r,r);
         setpix(x,y);
      }
}
diffimg(in1[imax][imax],in2[imax][imax],out[imax][imax])
{
   for(y=0;y<ly;y++)
      for(x=0;x<lx;x++) out[y][x]=in1[y][x]-in2[y][x];
}
addimg(in1[imax][imax],in2[imax][imax],out[imax][imax])
{
   for(y=0;y<ly;y++)
      for(x=0;x<lx;x++) out[y][x]=in1[y][x]+in2[y][x];
}
mulimg(in1[imax][imax],in2[imax][imax],out[imax][imax])
{
   for(y=0;y<ly;y++)
      for(x=0;x<lx;x++) out[y][x]=in1[y][x]*in2[y][x];
}
absimg(in[imax][imax],out[imax][imax])
{
   for(y=0;y<ly;y++)
      for(x=0;x<lx;x++) out[y][x]=abs(in[y][x]);
}
sclimg(m,s,in[imax][imax],out[imax][imax])
{
   for(y=0;y<ly;y++)
      for(x=0;x<lx;x++) out[y][x]=m*in[y][x]+s;
}
minmaxsclimg(in[imax][imax],out[imax][imax])
{
   min=1e20;max=-min;
   for(y=0;y<ly;y++)
      for(x=0;x<lx;x++){
         if (in[y][x]>max) max=in[y][x];
         if (in[y][x]<min) min=in[y][x];
      }
   a=1/(max-min);b=-a*min;
   for(y=0;y<ly;y++)
      for(x=0;x<lx;x++) out[y][x]=a*in[y][x]+b;
}
compImg(m1,img1[imax][imax],m2,img2[imax][imax],out[imax][imax])
{
   for(y=0;y<ly;y++)
      for(x=0;x<lx;x++) out[y][x]=m1*img1[y][x]+m2*img2[y][x];
}